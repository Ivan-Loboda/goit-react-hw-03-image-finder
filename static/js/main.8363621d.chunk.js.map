{"version":3,"sources":["components/ImageGalleryItem/ImageGalleryItem.module.css","components/Button/Button.module.css","components/Modal/Modal.module.css","components/ImageGallery/ImageGallery.module.css","api.js","components/Searchbar/Searchbar.jsx","components/ImageGalleryItem/ImageGalleryItem.jsx","components/ImageGallery/ImageGallery.jsx","components/Button/Button.jsx","components/Loader/Loader.jsx","components/Modal/Modal.jsx","App.js","index.js","components/Searchbar/Searchbar.module.css"],"names":["module","exports","fetchImages","search","page","a","axios","get","response","status","data","hits","Error","Searchbar","state","searchString","handleChange","e","setState","target","value","handleSubmit","preventDefault","trim","props","onSubmit","resetForm","alert","this","className","s","SearchForm","type","SearchForm_button","SearchForm_button__label","SearchForm_input","onChange","autoComplete","autoFocus","placeholder","Component","ImageGalleryItem","image","webformatURL","largeImageURL","tags","onShowModal","onClick","modalImage","src","alt","ImageGalleryItem_image","ImageGallery","images","map","id","Button","LoadButtonLabel","LoaderSpinner","Loader","color","height","width","timeout","Modal","onEsc","code","onToggleModalStatus","handleClickBackdrop","currentTarget","window","addEventListener","removeEventListener","Overlay","App","error","isLoading","modalIsHidden","loadImages","then","console","log","length","Promise","reject","catch","finally","handleFormSubmit","handleToggleModalStatus","showModaHandlelClick","loadMoreHandleClick","prevProps","prevState","scrollTo","top","document","body","clientHeight","behavior","message","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.8363621d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGalleryItem\":\"ImageGalleryItem_ImageGalleryItem__vkYMU\",\"ImageGalleryItem_image\":\"ImageGalleryItem_ImageGalleryItem_image__32s6q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__1lujk\",\"buttonWrapper\":\"Button_buttonWrapper__2oKxy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"Modal_Overlay__2Uir6\",\"Modal\":\"Modal_Modal__385_g\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGallery\":\"ImageGallery_ImageGallery__2pOkc\"};","import axios from \"axios\";\r\n\r\nconst baseUrl = 'https://pixabay.com/api/?';\r\nconst KEY = '23763400-56e03b3c97aa031975e4c0255';\r\nconst perPage = '12';\r\nconst filterUrl = '&image_type=photo&orientation=horizontal&safesearch=true';\r\n\r\n\r\nexport const fetchImages = async (search, page) => {\r\n    const response = await axios.get(`${baseUrl}&key=${KEY}&q=${search}${filterUrl}&page=${page}&per_page=${perPage}`)\r\n\r\n    if (response.status >= 200 && response.status < 300) {\r\n        return response.data.hits;\r\n    }\r\n    // if (data.status === 404) {\r\n    //     return Notiflix.Notify.info(\"Oops, there is no country with that name.\")\r\n    // };\r\n    throw new Error(response.status);\r\n};\r\n","import { Component } from 'react';\r\nimport s from './Searchbar.module.css';\r\n\r\nclass Searchbar extends Component {\r\n    state = {\r\n        searchString: ''\r\n    };\r\n\r\n    handleChange = e => this.setState({ searchString: e.target.value });\r\n\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        const { searchString } = this.state;\r\n\r\n        if (searchString.trim() === '') {\r\n            alert(\"Введите запрос для поиска...\");\r\n            return;\r\n        };\r\n\r\n        this.props.onSubmit(searchString);\r\n        this.resetForm();\r\n    };\r\n\r\n    resetForm = () => this.setState({ searchString: '' });\r\n\r\n    render() {\r\n        const { handleSubmit, handleChange } = this;\r\n        const { searchString } = this.state;\r\n\r\n        return (\r\n            <header className={s.Searchbar}>\r\n                <form className={s.SearchForm} onSubmit={handleSubmit}>\r\n                    <button type=\"submit\" className={s.SearchForm_button}>\r\n                        <span className={s.SearchForm_button__label}>Search</span>\r\n                    </button>\r\n\r\n                    <input\r\n                        className={s.SearchForm_input}\r\n                        type=\"text\"\r\n                        value={searchString}\r\n                        onChange={handleChange}\r\n                        autoComplete=\"off\"\r\n                        autoFocus\r\n                        placeholder=\"Search images and photos\"\r\n                    />\r\n                </form>\r\n            </header>\r\n        );\r\n    }\r\n};\r\n\r\nexport default Searchbar;","import PropTypes from 'prop-types';\r\nimport s from './ImageGalleryItem.module.css';\r\n\r\nexport function ImageGalleryItem({ image: { webformatURL, largeImageURL, tags }, onShowModal }) {\r\n    return (\r\n        <li\r\n            className={s.ImageGalleryItem}\r\n            onClick={() =>\r\n                onShowModal({\r\n                    modalImage: {\r\n                        largeImageURL,\r\n                        tags\r\n                    }\r\n                })\r\n            }>\r\n            <img\r\n                src={webformatURL}\r\n                alt={tags}\r\n                className={s.ImageGalleryItem_image} />\r\n        </li>\r\n    );\r\n};\r\n\r\nImageGalleryItem.propTypes = {\r\n    image: PropTypes.shape({\r\n        webformatURL: PropTypes.string.isRequired,\r\n        largeImageURL: PropTypes.string.isRequired,\r\n        tags: PropTypes.string.isRequired,\r\n    }).isRequired,\r\n    onShowModal: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ImageGalleryItem;","import PropTypes from 'prop-types';\r\nimport ImageGalleryItem from '../ImageGalleryItem';\r\nimport s from './ImageGallery.module.css';\r\n\r\nfunction ImageGallery({ images, onShowModal }) {\r\n    return (\r\n        <ul className={s.ImageGallery}>\r\n            {images.map(({ id, ...image }) => {\r\n                return (\r\n                    <ImageGalleryItem\r\n                        key={id}\r\n                        image={image}\r\n                        onShowModal={onShowModal}>\r\n                    </ImageGalleryItem>\r\n                );\r\n            })}\r\n        </ul>\r\n    );\r\n}\r\n\r\nexport default ImageGallery;\r\n\r\nImageGallery.propTypes = {\r\n    images: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n            id: PropTypes.number.isRequired,\r\n        })).isRequired,\r\n    onShowModal: PropTypes.func.isRequired\r\n};","import s from './Button.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Button = ({ onClick }) => {\r\n    return (\r\n        <div>\r\n            <button className={s.Button} type=\"button\" onClick={onClick}>\r\n                <span className={s.LoadButtonLabel}>Load more</span>\r\n            </button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Button;\r\n\r\nButton.propTypes = {\r\n    onClick: PropTypes.func.isRequired,\r\n};","import Loader from 'react-loader-spinner';\r\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\r\nimport s from './Loader.module.css';\r\n\r\nfunction LoaderSpinner() {\r\n    return (\r\n        <Loader\r\n            className={s.Loader}\r\n            type=\"MutatingDots\"\r\n            color=\"#3f51b5\"\r\n            height={100}\r\n            width={100}\r\n            timeout={3000} //3 secs\r\n        />\r\n    );\r\n};\r\n\r\nexport default LoaderSpinner;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './Modal.module.css';\r\n\r\nclass Modal extends Component {\r\n    componentDidMount() {\r\n        window.addEventListener('keydown', this.onEsc);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener('keydown', this.onEsc);\r\n    }\r\n\r\n    onEsc = e => {\r\n        if (e.code === 'Escape') {\r\n            this.props.onToggleModalStatus();\r\n        }\r\n    };\r\n\r\n    handleClickBackdrop = e => {\r\n        if (e.currentTarget === e.target) {\r\n            this.props.onToggleModalStatus();\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { largeImageURL, tags } = this.props.modalImage;\r\n\r\n        return (\r\n            <div className={s.Overlay} onClick={this.handleClickBackdrop}>\r\n                <div className={s.Modal}>\r\n                    <img src={largeImageURL} alt={tags} />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nexport default Modal;\r\n\r\nModal.propTypes = {\r\n    onToggleModalStatus: PropTypes.func.isRequired,\r\n    modalImage: PropTypes.shape({\r\n        largeImageURL: PropTypes.string.isRequired,\r\n        tags: PropTypes.string.isRequired\r\n    }).isRequired\r\n};","import { Component } from 'react';\r\nimport { fetchImages } from './api';\r\nimport Searchbar from './components/Searchbar';\r\nimport ImageGallery from './components/ImageGallery';\r\nimport Button from './components/Button';\r\nimport Loader from './components/Loader';\r\nimport Modal from './components/Modal';\r\n\r\nimport './App.css';\r\n\r\nclass App extends Component {\r\n  state = {\r\n    search: '',\r\n    images: [],\r\n    page: 1,\r\n    error: null,\r\n    isLoading: false,\r\n    modalImage: {},\r\n    modalIsHidden: true,\r\n  };\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (prevState.search !== this.state.search) {\r\n      this.setState({ images: [] }, () => {\r\n        this.loadImages(1);\r\n      });\r\n    }\r\n\r\n    if (prevState.images !== this.state.images && this.state.page !== 1) {\r\n      window.scrollTo({ top: document.body.clientHeight, behavior: 'smooth' });\r\n      console.log(this.state.page)\r\n    }\r\n  };\r\n\r\n  loadImages = (page) => {\r\n    const { images, search } = this.state;\r\n    this.setState({\r\n      page,\r\n      error: null,\r\n      isLoading: true\r\n    });\r\n\r\n    fetchImages(search, page)\r\n      .then((response) => {\r\n        console.log(response)\r\n        if (response.length === 0) {\r\n          return Promise.reject(\r\n            new Error(`There is no pictures by ${search} name, please try another request`));\r\n        } else {\r\n          this.setState({ images: [...(images || []), ...response] });\r\n        }\r\n      })\r\n      .catch(error => this.setState({ error }))\r\n      .finally(() => this.setState({ isLoading: false }));\r\n  };\r\n\r\n  handleFormSubmit = (searchString) => {\r\n    this.setState({ search: searchString });\r\n  };\r\n\r\n  handleToggleModalStatus = () => {\r\n    this.setState(({ modalIsHidden }) => ({ modalIsHidden: !modalIsHidden }));\r\n  };\r\n\r\n  showModaHandlelClick = ({ modalImage }) => {\r\n    this.setState({ modalImage: { ...modalImage } });\r\n    this.handleToggleModalStatus();\r\n  };\r\n\r\n  loadMoreHandleClick = () => {\r\n    this.loadImages(this.state.page + 1);\r\n  };\r\n\r\n  render() {\r\n    const { images, isLoading, error, modalImage, modalIsHidden } = this.state;\r\n    const { handleFormSubmit, showModaHandlelClick, handleToggleModalStatus, loadMoreHandleClick } = this;\r\n\r\n    return (\r\n      <>\r\n        <Searchbar\r\n          onSubmit={handleFormSubmit} />\r\n\r\n        {error &&\r\n          <h1>{error.message}</h1>}\r\n\r\n        <ImageGallery\r\n          images={images}\r\n          onShowModal={showModaHandlelClick} />\r\n\r\n        {isLoading &&\r\n          <Loader />}\r\n\r\n        {!!images.length && !isLoading &&\r\n          <Button\r\n            onClick={loadMoreHandleClick} />}\r\n\r\n        {!modalIsHidden &&\r\n          <Modal\r\n            onToggleModalStatus={handleToggleModalStatus}\r\n            modalImage={modalImage} />}\r\n      </>\r\n    );\r\n  }\r\n};\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"Searchbar_Searchbar__W-TZp\",\"SearchForm\":\"Searchbar_SearchForm__2H10Q\",\"SearchForm_button\":\"Searchbar_SearchForm_button__2SHZ9\",\"SearchForm_button__label\":\"Searchbar_SearchForm_button__label__1QgxA\",\"SearchForm_input\":\"Searchbar_SearchForm_input__1Ze0c\"};"],"sourceRoot":""}